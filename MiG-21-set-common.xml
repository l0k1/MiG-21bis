<?xml version="1.0"?>

<PropertyList>
    <!--<aax type="float">0</aax>
    <aay type="float">0</aay>
    <a type="float">0.5</a>
    <b type="float">1000000</b>
    <c type="float">0</c>-->
    <sim>
        
        <status>v0.2.5</status>
        
        <submodels>
            <serviceable type="bool">true</serviceable>
            <path>Aircraft/MiG-21bis/Submodels.xml</path>
        </submodels>

        <minimum-fg-version>2018.1.1</minimum-fg-version>

        <!-- System Settings -->

        <!-- electrical, hydraulic, pneumatic, and fuel systems will be done in jsbsim -->

        <systems>
            <autopilot>
                <path>Aircraft/MiG-21bis/Systems/Autopilot.xml</path>
            </autopilot>
            <property-rule n="101">
                <name>radar-altimeter</name>
                <path>Aircraft/MiG-21bis/Systems/radar-altimeter.xml</path>
            </property-rule>
        </systems>

        <state include="States/test.xml" n="0"/>

        <sound>
            <path>Aircraft/MiG-21bis/Sounds/Sound.xml</path>
        </sound>

        <virtual-cockpit archive="y">true</virtual-cockpit>
        <allow-toggle-cockpit archive="y">false</allow-toggle-cockpit>

        <panel>
            <visibility archive="y">false</visibility>
        </panel>

        <flaps>
            <setting>0.000</setting>
            <setting>0.500</setting>
            <setting>1.000</setting>
        </flaps>

        <!-- View Settings -->

        <chase-distance-m>-20</chase-distance-m>
        
        <!-- Custom instrumentation file -->

        <instrumentation>
            <path>Aircraft/MiG-21bis/Systems/instrumentation.xml</path>
        </instrumentation>

        <!-- Menu -->

        <menubar>
            <default>
                <menu n="100">
                    <label>MiG-21</label>
                    <enabled type="bool">true</enabled>
                    <item>
                        <label>Autostart/Shutdown</label>
                        <binding>
                            <command>nasal</command>
                            <script>mig21.autostart(1)</script>
                        </binding>
                    </item>
                    <item>
                        <label>Select Livery</label>
                        <binding>
                            <command>nasal</command>
                            <script>aircraft.livery.dialog.toggle()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Show Stores Dialog</label>
                        <binding>
                            <command>nasal</command><![CDATA[some stuff]]>
                            <script>
                                canvas_window.showStoresDialog();
                            </script>
                        </binding>
                    </item>
                    <item>
                        <label>Select Radio Config File</label>
                        <binding>
                            <command>nasal</command>
                            <script>mig21.get_radio_file_gui();</script>
                        </binding>
                    </item>
                    <item>
                        <label>VOR/ILS Radio</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.nav_radio_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Comm Radio</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.comm_radio_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>ADF Radio</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.adf_radio_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Smokepod Color</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.smokepod_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Repack Chute</label>
                        <binding>
                            <command>property-assign</command>
                            <property>/controls/flight/chute_jettisoned</property>
                            <value>0</value>
                        </binding>
                        <binding>
                            <command>property-assign</command>
                            <property>/fdm/jsbsim/systems/chute/deploy-rqst</property>
                            <value>0</value>
                        </binding>
                    </item>
                    <item>
                        <label>Reload Flares/Chaff</label>
                        <binding>
                            <command>property-assign</command>
                            <property>/ai/submodels/submodel[0]/count</property>
                            <value>60</value>
                        </binding>
                        <binding>
                            <command>property-assign</command>
                            <property>/ai/submodels/submodel[1]/count</property>
                            <value>60</value>
                        </binding>
                        <binding>
                            <command>property-assign</command>
                            <property>/ai/submodels/submodel[2]/count</property>
                            <value>60</value>
                        </binding>
                        <binding>
                            <command>property-assign</command>
                            <property>/ai/submodels/submodel[3]/count</property>
                            <value>60</value>
                        </binding>
                    </item>
                    <item>
                        <label>Gunsight</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.gunsight_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Training</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.mig28_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Fuel to full</label>
                        <binding>
                            <command>nasal</command>
                            <script>
                                if (getprop("/gear/gear/wow") == 1) {
                                    setprop("/consumables/fuel/tank/level-norm", 1);
                                    setprop("/consumables/fuel/tank[1]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[2]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[3]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[4]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[5]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[6]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[7]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[8]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[9]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[10]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[11]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[12]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[13]/level-norm", 1);
                                    setprop("/consumables/fuel/tank[14]/level-norm", 1);
                                }
                            </script>
                        </binding>
                    </item>
                    <item>
                        <label>Toggle Damage</label>
                        <binding>
                            <command>nasal</command>
                            <script>
                                mig21.toggle_damage();
                            </script>
                        </binding>
                    </item>
                    <item>
                        <label>Tacview Record</label>
                        <binding>
                            <command>nasal</command>
                            <script>
                                if (tacview.starttime == 0) {
                                    tacview.startwrite();
                                } else {
                                    tacview.stopwrite();
                                }
                            </script>
                        </binding>
                    </item>
                    <item>
                        <label>Event Log</label>
                        <binding>
                            <command>dialog-show</command>
                            <dialog-name>flightlog</dialog-name>
                        </binding>
                    </item>
                    <item>
                        <label>Toggle Headshake</label>
                        <binding>
                            <command>property-toggle</command>
                            <property>/sim/enable-headshake</property>
                        </binding>
                    </item>
                </menu>
                <menu n="101">
                    <label>Dev</label>
                    <item>
                        <label>Tune Drag</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.tuner_drag_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Tune Lift</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.tuner_lift_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Tune Pitch</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.tuner_pitch_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Tune Roll</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.tuner_roll_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Tune Side</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.tuner_side_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <label>Tune Yaw</label>
                        <binding>
                            <command>nasal</command>
                            <script>dialog.tuner_yaw_dialog.open()</script>
                        </binding>
                    </item>
                    <item>
                        <name>a-submenu</name>
                        <enabled>false</enabled>
                    </item>
                    <item>
                        <label>Dump Prop Tree</label>
                        <binding>
                            <command>nasal</command>
                            <script>
                                io.write_properties( path: getprop("/sim/fg-home") ~ "/Export/MiG-21bis/prop_tree_dump.xml", prop: "/" );
                            </script>
                        </binding>
                    </item>
                    <item>
                        <label>Perfmon</label>
                        <binding>
                            <command>nasal</command>
                            <script>
                                monitor.PerformanceMonitor.instance().start();
                            </script>
                        </binding>
                    </item>
                </menu>            
            </default>
        </menubar>

        <!-- Help -->

        <help include="Systems/help.xml" />

        <!-- Multiplayer -->

        <multiplay>
            <generic>
                <!-- Nav lights on -->
                <int n="0" alias="/controls/lighting/nav-lights-switch" />
                <!-- Beacon on -->
                <int n="1" alias="/controls/lighting/beacon-switch" />
                <!-- radar -->
                <int n="2"/>
                <!-- Taxi light on -->
                <int n="3" alias="/controls/lighting/taxi-light-switch" />
                <!-- Crashed -->
                <int n="7" alias="/sim/crashed" />

                <int n="10" alias="/controls/armament/trigger" />
                <!-- Smokepod -->
                <int n="19" type="int">0</int>
                <!-- hmcs -->
                <float n="8" alias="/engines/engine[0]/augmentation" /> <!-- Reheat  -->
                <float n="9" alias="/engines/engine[0]/nozzle-pos-norm" /> <!-- Reheat  -->
                <float n="10" alias="/fdm/jsbsim/propulsion/clr" /> <!-- Reheat  -->
                <string n="6" type="string"/> <!-- radar lock -->
                <string n="9" type="string"/>
                <!--<string n="11" alias="/payload/weight[0]/selected"/>
                <string n="12" alias="/payload/weight[1]/selected"/>
                <string n="13" alias="/payload/weight[2]/selected"/>
                <string n="14" alias="/payload/weight[3]/selected"/>
                <string n="15" alias="/payload/weight[4]/selected"/>
                <string n="16" alias="/payload/weight[5]/selected"/>
                <string n="17" alias="/payload/weight[6]/selected"/>-->
                <!--payloads-->
                <short n="0" alias="/payload/weight[0]/id"/>
                <short n="1" alias="/payload/weight[1]/id"/>
                <short n="2" alias="/payload/weight[2]/id"/>
                <short n="3" alias="/payload/weight[3]/id"/>
                <short n="4" alias="/payload/weight[4]/id"/>
                <short n="5" alias="/payload/weight[5]/id"/>
                <short n="6" alias="/payload/weight[6]/id"/>
                <!--payload rails-->
                <short n="7" alias="/payload/rail[0]/id"/>
                <short n="8" alias="/payload/rail[1]/id"/>
                <short n="9" alias="/payload/rail[2]/id"/>
                <short n="10" alias="/payload/rail[3]/id"/>
                <short n="11" alias="/payload/rail[4]/id"/>
                <bool n="0" type="bool" alias ="/instrumentation/gci/picture"/> <!-- gci request -->
                <bool n="1" type="bool" alias ="/instrumentation/gci/bogeydope"/> <!-- gci request -->
                <bool n="2" type="bool" alias ="/instrumentation/gci/cutoff"/> <!-- gci request -->
                <bool n="3" type="bool" alias ="/fdm/jsbsim/systems/chute/deploy"/>
                <bool n="4" type="bool" alias="/fdm/jsbsim/systems/hmcs/deploying"/>
            </generic>
        </multiplay>

        <!-- persistent properties -->

        <aircraft-data>

            <path>/instrumentation/vor-radio/preset[0]</path>
            <path>/instrumentation/vor-radio/preset[1]</path>
            <path>/instrumentation/vor-radio/preset[2]</path>
            <path>/instrumentation/vor-radio/preset[3]</path>
            <path>/instrumentation/vor-radio/preset[4]</path>
            <path>/instrumentation/vor-radio/preset[5]</path>
            <path>/instrumentation/vor-radio/preset[6]</path>
            <path>/instrumentation/vor-radio/preset[7]</path>
            <path>/instrumentation/vor-radio/preset[8]</path>
            <path>/instrumentation/vor-radio/preset[9]</path>
            <path>/instrumentation/vor-radio/preset[10]</path>
            <path>/instrumentation/vor-radio/preset[11]</path>
            <path>/instrumentation/vor-radio/preset[12]</path>
            <path>/instrumentation/vor-radio/preset[13]</path>
            <path>/instrumentation/vor-radio/preset[14]</path>
            <path>/instrumentation/vor-radio/preset[15]</path>
            <path>/instrumentation/vor-radio/preset[16]</path>
            <path>/instrumentation/vor-radio/preset[17]</path>
            <path>/instrumentation/vor-radio/preset[18]</path>
            <path>/instrumentation/vor-radio/preset[19]</path>

            <path>/instrumentation/vor-radio/ident[0]</path>
            <path>/instrumentation/vor-radio/ident[1]</path>
            <path>/instrumentation/vor-radio/ident[2]</path>
            <path>/instrumentation/vor-radio/ident[3]</path>
            <path>/instrumentation/vor-radio/ident[4]</path>
            <path>/instrumentation/vor-radio/ident[5]</path>
            <path>/instrumentation/vor-radio/ident[6]</path>
            <path>/instrumentation/vor-radio/ident[7]</path>
            <path>/instrumentation/vor-radio/ident[8]</path>
            <path>/instrumentation/vor-radio/ident[9]</path>
            <path>/instrumentation/vor-radio/ident[10]</path>
            <path>/instrumentation/vor-radio/ident[11]</path>
            <path>/instrumentation/vor-radio/ident[12]</path>
            <path>/instrumentation/vor-radio/ident[13]</path>
            <path>/instrumentation/vor-radio/ident[14]</path>
            <path>/instrumentation/vor-radio/ident[15]</path>
            <path>/instrumentation/vor-radio/ident[16]</path>
            <path>/instrumentation/vor-radio/ident[17]</path>
            <path>/instrumentation/vor-radio/ident[18]</path>
            <path>/instrumentation/vor-radio/ident[19]</path>

            <path>/instrumentation/ils-radio/preset[0]</path>
            <path>/instrumentation/ils-radio/preset[1]</path>
            <path>/instrumentation/ils-radio/preset[2]</path>
            <path>/instrumentation/ils-radio/preset[3]</path>
            <path>/instrumentation/ils-radio/preset[4]</path>
            <path>/instrumentation/ils-radio/preset[5]</path>
            <path>/instrumentation/ils-radio/preset[6]</path>
            <path>/instrumentation/ils-radio/preset[7]</path>
            <path>/instrumentation/ils-radio/preset[8]</path>
            <path>/instrumentation/ils-radio/preset[9]</path>
            <path>/instrumentation/ils-radio/preset[10]</path>
            <path>/instrumentation/ils-radio/preset[11]</path>
            <path>/instrumentation/ils-radio/preset[12]</path>
            <path>/instrumentation/ils-radio/preset[13]</path>
            <path>/instrumentation/ils-radio/preset[14]</path>
            <path>/instrumentation/ils-radio/preset[15]</path>
            <path>/instrumentation/ils-radio/preset[16]</path>
            <path>/instrumentation/ils-radio/preset[17]</path>
            <path>/instrumentation/ils-radio/preset[18]</path>
            <path>/instrumentation/ils-radio/preset[19]</path>

            <path>/instrumentation/ils-radio/ident[0]</path>
            <path>/instrumentation/ils-radio/ident[1]</path>
            <path>/instrumentation/ils-radio/ident[2]</path>
            <path>/instrumentation/ils-radio/ident[3]</path>
            <path>/instrumentation/ils-radio/ident[4]</path>
            <path>/instrumentation/ils-radio/ident[5]</path>
            <path>/instrumentation/ils-radio/ident[6]</path>
            <path>/instrumentation/ils-radio/ident[7]</path>
            <path>/instrumentation/ils-radio/ident[8]</path>
            <path>/instrumentation/ils-radio/ident[9]</path>
            <path>/instrumentation/ils-radio/ident[10]</path>
            <path>/instrumentation/ils-radio/ident[11]</path>
            <path>/instrumentation/ils-radio/ident[12]</path>
            <path>/instrumentation/ils-radio/ident[13]</path>
            <path>/instrumentation/ils-radio/ident[14]</path>
            <path>/instrumentation/ils-radio/ident[15]</path>
            <path>/instrumentation/ils-radio/ident[16]</path>
            <path>/instrumentation/ils-radio/ident[17]</path>
            <path>/instrumentation/ils-radio/ident[18]</path>
            <path>/instrumentation/ils-radio/ident[19]</path>

            <path>/instrumentation/comm-radio/preset[0]</path>
            <path>/instrumentation/comm-radio/preset[1]</path>
            <path>/instrumentation/comm-radio/preset[2]</path>
            <path>/instrumentation/comm-radio/preset[3]</path>
            <path>/instrumentation/comm-radio/preset[4]</path>
            <path>/instrumentation/comm-radio/preset[5]</path>
            <path>/instrumentation/comm-radio/preset[6]</path>
            <path>/instrumentation/comm-radio/preset[7]</path>
            <path>/instrumentation/comm-radio/preset[8]</path>
            <path>/instrumentation/comm-radio/preset[9]</path>
            <path>/instrumentation/comm-radio/preset[10]</path>
            <path>/instrumentation/comm-radio/preset[11]</path>
            <path>/instrumentation/comm-radio/preset[12]</path>
            <path>/instrumentation/comm-radio/preset[13]</path>
            <path>/instrumentation/comm-radio/preset[14]</path>
            <path>/instrumentation/comm-radio/preset[15]</path>
            <path>/instrumentation/comm-radio/preset[16]</path>
            <path>/instrumentation/comm-radio/preset[17]</path>
            <path>/instrumentation/comm-radio/preset[18]</path>
            <path>/instrumentation/comm-radio/preset[19]</path>

            <path>/instrumentation/comm-radio/ident[0]</path>
            <path>/instrumentation/comm-radio/ident[1]</path>
            <path>/instrumentation/comm-radio/ident[2]</path>
            <path>/instrumentation/comm-radio/ident[3]</path>
            <path>/instrumentation/comm-radio/ident[4]</path>
            <path>/instrumentation/comm-radio/ident[5]</path>
            <path>/instrumentation/comm-radio/ident[6]</path>
            <path>/instrumentation/comm-radio/ident[7]</path>
            <path>/instrumentation/comm-radio/ident[8]</path>
            <path>/instrumentation/comm-radio/ident[9]</path>
            <path>/instrumentation/comm-radio/ident[10]</path>
            <path>/instrumentation/comm-radio/ident[11]</path>
            <path>/instrumentation/comm-radio/ident[12]</path>
            <path>/instrumentation/comm-radio/ident[13]</path>
            <path>/instrumentation/comm-radio/ident[14]</path>
            <path>/instrumentation/comm-radio/ident[15]</path>
            <path>/instrumentation/comm-radio/ident[16]</path>
            <path>/instrumentation/comm-radio/ident[17]</path>
            <path>/instrumentation/comm-radio/ident[18]</path>
            <path>/instrumentation/comm-radio/ident[19]</path>

            <path>/instrumentation/adf-radio/preset[0]</path>
            <path>/instrumentation/adf-radio/preset[1]</path>
            <path>/instrumentation/adf-radio/preset[2]</path>
            <path>/instrumentation/adf-radio/preset[3]</path>
            <path>/instrumentation/adf-radio/preset[4]</path>
            <path>/instrumentation/adf-radio/preset[5]</path>
            <path>/instrumentation/adf-radio/preset[6]</path>
            <path>/instrumentation/adf-radio/preset[7]</path>
            <path>/instrumentation/adf-radio/preset[8]</path>
            
            <path>/instrumentation/adf-radio/ident[0]</path>
            <path>/instrumentation/adf-radio/ident[1]</path>
            <path>/instrumentation/adf-radio/ident[2]</path>
            <path>/instrumentation/adf-radio/ident[3]</path>
            <path>/instrumentation/adf-radio/ident[4]</path>
            <path>/instrumentation/adf-radio/ident[5]</path>
            <path>/instrumentation/adf-radio/ident[6]</path>
            <path>/instrumentation/adf-radio/ident[7]</path>
            <path>/instrumentation/adf-radio/ident[8]</path>

            <path>/instrumentation/gyro-compass/gyro-heading-deg</path>

        </aircraft-data>

        <rendering>
            <redout>
                <enabled type="bool" userarchive="y">true</enabled>
                <parameters>
                    <blackout-onset-g type="double">3.75</blackout-onset-g>
                    <blackout-complete-g type="double">7.5</blackout-complete-g>
                    <onset-blackout-sec type="double">270</onset-blackout-sec>
                    <fast-blackout-sec type="double">8</fast-blackout-sec>
                    <redout-onset-g type="double">-1</redout-onset-g>
                    <redout-complete-g type="double">-3</redout-complete-g>
                    <onset-redout-sec type="double">45</onset-redout-sec>
                    <fast-redout-sec type="double">7.5</fast-redout-sec>
                    <recover-fast-sec type="double">7</recover-fast-sec>
                    <recover-slow-sec type="double">15</recover-slow-sec>
                </parameters>
            </redout>
            <headshake>
                <enabled type="bool" userarchive="y">true</enabled>
            </headshake>
        </rendering>
        <enable-headshake type="bool" userarchive="y">true</enable-headshake>

    </sim>

    <consumables>
        <fuel>
            <tank n="0"><name>Dorsal</name></tank>
            <tank n="1"><name>Front</name></tank>
            <tank n="2"><name>Main</name></tank>
            <tank n="3"><name>Aft 1</name></tank>
            <tank n="4"><name>Aft 2</name></tank>
            <tank n="5"><name>Aft 3</name></tank>
            <tank n="6"><name>Saddle</name></tank>
            <tank n="7"><name>Left Wing Front</name></tank>
            <tank n="8"><name>Left Wing Rear</name></tank>
            <tank n="9"><name>Right Wing Front</name></tank>
            <tank n="10"><name>Right Wing Rear</name></tank>
            <tank n="11"><name>Ventral Drop Tank</name></tank>
            <tank n="12"><name>Left Drop Tank</name></tank>
            <tank n="13"><name>Right Drop Tank</name></tank>
            <tank n="14"><name>Accumulator</name></tank>
        </fuel>
    </consumables>

    <!-- Misc Settings -->

    <controls>
        <flight>
            <flaps>0</flaps>
            <flap-panel>
                <up type="bool">1</up>
                <takeoff type="bool">0</takeoff>
                <landing type="bool">0</landing>
            </flap-panel>
            <elevator-trim>0.00</elevator-trim>
            <chute_jettisoned type="int">0</chute_jettisoned>
        </flight>
        <gear>
            <brake-parking type="double">1</brake-parking>
            <requested-setting type="int">0</requested-setting>
            <up-pin type="bool">false</up-pin>
        </gear>
        <lighting>
            <instruments-norm>0.3</instruments-norm>
        </lighting>
        <engines>
            <engine>
                <starting-switch type="int">0</starting-switch> <!-- 0 is cold cranking, 1 is engine start -->
                <start-ignition-signal type="bool">false</start-ignition-signal>
            </engine>
        </engines>
        <armament>
            <pickle-target alias="fdm/jsbsim/systems/armament/release"/>
            <panel>
                <!--switches, knobbins and buttons-->
                <reload n="0" type="bool">false</reload>
                <reload n="1" type="bool">false</reload>
                <reload n="2" type="bool">false</reload>
                <air-gnd-switch type="int">1</air-gnd-switch>
                <ir-sar-switch type="int">1</ir-sar-switch>
                <pylon-knob type="int">0</pylon-knob>
                <!-- lights -->
                <gun-ready type="bool">1</gun-ready>
            </panel>
            <jettison>
                <tanks_cover type="bool">false</tanks_cover>
                <tanks_jett type="bool">false</tanks_jett>
                <inbd_cover type="bool">false</inbd_cover>
                <inbd_jett type="bool">false</inbd_jett>
                <outbd_cover type="bool">false</outbd_cover>
                <outbd_jett type="bool">false</outbd_jett>
                <center_tank type="bool">false</center_tank>
                <boom type="bool">false</boom>
            </jettison>
            <gunsight>
                <!--fixed net options-->
                <ghosting-x type="double">5480</ghosting-x>
                <ghosting-y type="double">5480</ghosting-y>
                <scaling type="double">0</scaling>
                <elevation type="int">-158</elevation>
                <windage type="int">0</windage>
                <!--fixed net fade value is set under gunsights below-->
                <!--fixed net/pipper options-->
                <red type="int">239</red>
                <green type="int">197</green>
                <blue type="int">31</blue>
                <thickness type="int">3</thickness>
                <font-size type="int">60</font-size>
                <!--gunsight switches and knobbins-->
                <gun-missile-switch type="int">0</gun-missile-switch>
                <pipper-mode-select-switch type="int">0</pipper-mode-select-switch>
                <auto-man-switch type="int">0</auto-man-switch>
                <pipper-accuracy-switch type="int">0</pipper-accuracy-switch>
                <pipper-power-switch type="int">0</pipper-power-switch>
                <target-size-knob type="float">1.65</target-size-knob>
                <pipper-brightness-knob type="float">1</pipper-brightness-knob>
                <pipper-scale type="float">11</pipper-scale>
                <throttle-drum type="float">0</throttle-drum>
                <angle-setting-prefilter type="float">0</angle-setting-prefilter>
                <angle-setting-postfilter type="float">0</angle-setting-postfilter>
                <angle-setting-autorotate type="bool">0</angle-setting-autorotate>
                <angle-setting-motorcontrol type="bool">0</angle-setting-motorcontrol>
                <fixed-net-brightness-knob type="float">1</fixed-net-brightness-knob>
                <scale-dial-brightness-knob type="float">1</scale-dial-brightness-knob>
                <scale-dial-brightness type="float">1</scale-dial-brightness>
                <scale-dial-prefilter type="float">0</scale-dial-prefilter>
                <scale-dial-postfilter type="float">0</scale-dial-postfilter>
                <missile-scale-prefilter type="float">0</missile-scale-prefilter>
                <missile-scale-postfilter type="float">0</missile-scale-postfilter>
                <damping type="bool">0</damping>
                <lock-light type="float">0</lock-light>
                <launch-light type="float">0</launch-light>
                <breakoff-light type="float">0</breakoff-light>
            </gunsight>
            <missile-release type="int" alias="/fdm/jsbsim/systems/armament/release">0</missile-release>
            <trigger type="bool">false</trigger>
            <pickle alias="/fdm/jsbsim/systems/armament/release">0</pickle>
            <bomb-arm type="bool">false</bomb-arm>
            <bomb-arm-guard type="bool">false</bomb-arm-guard>
            <station n="0"> <!-- left outer wing -->
                <offsets>
                    <x-m type="double">  1.33</x-m>
                    <y-m type="double"> -2.73</y-m>
                    <z-m type="double"> -0.51</z-m>
                </offsets>
                <trigger type="bool">false</trigger>
            </station>
            <station n="1"> <!-- left inner wing -->
                <offsets>
                    <x-m type="double"> -0.35</x-m>
                    <y-m type="double"> -2.11</y-m>
                    <z-m type="double"> -0.20</z-m>
                </offsets>
                <trigger type="bool">false</trigger>
            </station>
            <station n="2"><!--center-->
                <offsets>
                    <x-m type="double">  -0.3</x-m>
                    <y-m type="double">  0.00</y-m>
                    <z-m type="double"> -0.83</z-m>
                </offsets>
                <trigger type="bool">false</trigger>
                <trigger-m70 type="bool">false</trigger-m70>
            </station>
            <station n="3"> <!-- right inner wing -->
                <offsets>
                    <x-m type="double"> -0.35</x-m>
                    <y-m type="double">  2.11</y-m>
                    <z-m type="double"> -0.20</z-m>
                </offsets>
                <trigger type="bool">false</trigger>
                <trigger-m70 type="bool">false</trigger-m70>
            </station>
            <station n="4"><!-- right outer wing -->
                <offsets>
                    <x-m type="double">  1.33</x-m>
                    <y-m type="double"> 2.73</y-m>
                    <z-m type="double"> -0.51</z-m>
                </offsets>
                <trigger type="bool">false</trigger>
            </station>
            <station n="5"><!-- rear left jato/cm -->
                <offsets>
                    <x-m type="double">  1.33</x-m>
                    <y-m type="double"> 2.73</y-m>
                    <z-m type="double"> -0.51</z-m>
                </offsets>
                <trigger type="bool">false</trigger>
            </station>
            <station n="6"><!-- rear right jato/cm -->
                <offsets>
                    <x-m type="double">  1.33</x-m>
                    <y-m type="double"> 2.73</y-m>
                    <z-m type="double"> -0.51</z-m>
                </offsets>
                <trigger type="bool">false</trigger>
            </station>
            <station n="7"><!-- left r-60 #2 -->
                <offsets>
                    <x-m type="double">  1.33</x-m>
                    <y-m type="double"> -2.88</y-m>
                    <z-m type="double"> -0.50</z-m>
                </offsets>
                <trigger type="bool">false</trigger>
            </station>
            <station n="8"><!-- right r-60 #2 -->
                <offsets>
                    <x-m type="double">  1.33</x-m>
                    <y-m type="double">  2.88</y-m>
                    <z-m type="double"> -0.50</z-m>
                </offsets>
                <trigger type="bool">false</trigger>
            </station>
            <chaff-trigger type="bool">false</chaff-trigger>
            <flare-trigger type="bool">false</flare-trigger>
            <cm-trigger type="bool">false</cm-trigger>
            <rocket-trigger type="int">0</rocket-trigger> <!-- can be 0, 1, or 2 -->
            <rocket-setting type="int">4</rocket-setting>
        </armament>
        <radar>
            <panel>
                <continuous-jam type="bool">0</continuous-jam>
                <intermittent-jam type="bool">0</intermittent-jam>
                <passive-jam type="bool">0</passive-jam>
                <weather-filter type="bool">0</weather-filter>
                <iff type="bool">0</iff>
                <lst-mode type="bool">0</lst-mode>
                <selftest type="bool">0</selftest>
                <reset type="bool">0</reset>
            </panel>
            <power-panel>
                <run>0</run>
                <low-alt>0</low-alt>
                <fixed-beam>0</fixed-beam>
            </power-panel>
            <lock-bars-scale type="int">100</lock-bars-scale>
            <lock-bars-pos type="int">0</lock-bars-pos>
            <mode type="string">normal</mode>
        </radar>
        <smokepod>
            <color type="string">white</color>
            <trigger type="bool">0</trigger>
        </smokepod>
    </controls>

    <engines>
        <engine n="0">
            <running>false</running>
        </engine>
    </engines>

    <rotors>
        <main>
            <rpm alias="/engines/engine/nozzle-pos-norm"/>
            <blade n="0">
                <flap-deg type="double">0</flap-deg>
                <position-deg alias="/gear/gear[0]/rollspeed-ms"/>
            </blade>
            <blade n="1">
                <flap-deg type="double">0</flap-deg>
                <position-deg alias="/gear/gear[1]/rollspeed-ms"/>
            </blade>
            <blade n="2">
                <flap-deg type="double">0</flap-deg>
                <position-deg alias="/gear/gear[2]/rollspeed-ms"/>
            </blade>
            <blade n="3">
                <flap-deg type="double" alias="/fdm/jsbsim/systems/armament/cm/flares-mp-value"/>        <!-- used for releasing flares -->
                <position-deg type="double" alias="/fdm/jsbsim/systems/armament/cm/chaff-mp-value"/><!-- used for releasing chaff  -->
            </blade>
        </main>
    </rotors>

    <instrumentation>
        <autopilot>
            <lights>
                <off type="int">0</off>
                <cmd type="int">0</cmd>
                <auto type="int">0</auto>
                <stab type="int">0</stab>
                <level type="int">0</level>
            </lights>
        </autopilot>
        <adf n="0">
            <arc-sel type="int">0</arc-sel>
            <inbound-outbound-switch type="int">0</inbound-outbound-switch>
            <in-out-state type="int">0</in-out-state>
            <overhead type="double">0</overhead>
            <ident-audible type="bool">true</ident-audible>
        </adf>
        <armament>
            <msl-emergency-release>
                <button-cover type="bool">false</button-cover>
                <button type="bool">false</button>
            </msl-emergency-release>
        </armament>
        <nav n="0">
            <radials>
                <selected-deg>0</selected-deg>
            </radials>
            <radio-tune-update type="bool">false</radio-tune-update>
        </nav>
        <marker-beacon>
            <volume type="double" archive="y">0.0</volume>
        </marker-beacon>
        <gyro-compass>
            <gyro-heading-deg type="double" userarchive="y">0.0</gyro-heading-deg>
        </gyro-compass>
        <gci>
            <picture type="bool">false</picture>
            <bogeydope type="bool">false</bogeydope>
            <cutoff type="bool">false</cutoff>
        </gci>
        <radar>
            <range type="int" archive="y">20</range>
            <range-factor type="double" archive="n">0.001888</range-factor>
            <minimized type="bool" archive="y">false</minimized>
            <selected type="int">3</selected>
            <enabled type="bool">true</enabled>
            <az-field type="double">120</az-field>
            <range type="double">150</range>
            <range-selected type="double">50</range-selected>
            <radar2-range type="double">150</radar2-range>
            <display-rdr type="bool">true</display-rdr>
            <radar-standby type="int">3</radar-standby>
            <mode>
                <rws type="bool">true</rws>
                <tws-auto type="bool">false</tws-auto>
            </mode>
            <serviceable type="bool">true</serviceable>
            <look-through-terrain type="bool">false</look-through-terrain>
            <doppler-enabled type="bool">true</doppler-enabled>
            <min-doppler-speed-kt type="int">60</min-doppler-speed-kt>
            <low-speed-limit type="int">60</low-speed-limit>
        </radar>
        <rdmi-mode type="int">0</rdmi-mode> <!-- 0=TAC, 1=VOR, 2=ADF -->
        <radar2>
            <sweep-width-m type="double">0.0844</sweep-width-m>
            <range-width-m type="double">0.0846</range-width-m>
            <radius-ppi-display-m type="double">0.0846</radius-ppi-display-m>
            <hud-eye-dist-m type="double">0.766</hud-eye-dist-m>
            <hud-radius-m type="double">0.071</hud-radius-m>
            <hud-vertical-offset-m type="double">-0.025</hud-vertical-offset-m>
        </radar2>
        <rwr>
            <red-yellow type="int">0</red-yellow>
            <volume>0.5</volume>
            <forward-left>
                <light-enable type="bool">false</light-enable>
                <signal-strength type="int">0</signal-strength>
            </forward-left>
            <forward-right>
                <light-enable type="bool">false</light-enable>
                <signal-strength type="int">0</signal-strength>
            </forward-right>
            <rear-left>
                <light-enable type="bool">false</light-enable>
                <signal-strength type="int">0</signal-strength>
            </rear-left>
            <rear-right>
                <light-enable type="bool">false</light-enable>
                <signal-strength type="int">0</signal-strength>
            </rear-right>
        </rwr>
        <iff>
            <channel_prop type="string">/instrumentation/iff/channel-selection</channel_prop>
            <power_prop type="string">/instrumentation/iff/power</power_prop>
            <power type="double">1</power>
            <channel-selection type="int">1</channel-selection>
            <!--mig-21bis specific stuff -->
            <resp-light type="bool">false</resp-light>
            <imtr-light type="bool">false</imtr-light>
            <decod-light type="bool">false</decod-light>
        </iff>
        <gunsight>
            <min-launch-range type="float">0</min-launch-range>
            <max-launch-range type="float">0</max-launch-range>
            <range-to-target type="float">0</range-to-target>
            <ir-lock type="bool" n="0">0</ir-lock>
            <ir-lock type="bool" n="1">0</ir-lock>
            <ir-lock type="bool" n="2">0</ir-lock>
        </gunsight>
        <fuel>
            <knob-level type="float">0</knob-level>
        </fuel>
        <vor-radio>
            <selection type="int" userarchive="y">0</selection>
            <preset userarchive="y" type="double" n="0">108.00</preset>
            <preset type="double" n="1" userarchive="y">108.00</preset>
            <preset type="double" n="2" userarchive="y">108.00</preset>
            <preset type="double" n="3" userarchive="y">108.00</preset>
            <preset type="double" n="4" userarchive="y">108.00</preset>
            <preset type="double" n="5" userarchive="y">108.00</preset>
            <preset type="double" n="6" userarchive="y">108.00</preset>
            <preset type="double" n="7" userarchive="y">108.00</preset>
            <preset type="double" n="8" userarchive="y">108.00</preset>
            <preset type="double" n="9" userarchive="y">108.00</preset>
            <preset type="double" n="10" userarchive="y">108.00</preset>
            <preset type="double" n="11" userarchive="y">108.00</preset>
            <preset type="double" n="12" userarchive="y">108.00</preset>
            <preset type="double" n="13" userarchive="y">108.00</preset>
            <preset type="double" n="14" userarchive="y">108.00</preset>
            <preset type="double" n="15" userarchive="y">108.00</preset>
            <preset type="double" n="16" userarchive="y">108.00</preset>
            <preset type="double" n="17" userarchive="y">108.00</preset>
            <preset type="double" n="18" userarchive="y">108.00</preset>
            <preset type="double" n="19" userarchive="y">108.00</preset>
            <ident userarchive="y" type="string" n="0"></ident>
            <ident type="string" n="1" userarchive="y"></ident>
            <ident type="string" n="2" userarchive="y"></ident>
            <ident type="string" n="3" userarchive="y"></ident>
            <ident type="string" n="4" userarchive="y"></ident>
            <ident type="string" n="5" userarchive="y"></ident>
            <ident type="string" n="6" userarchive="y"></ident>
            <ident type="string" n="7" userarchive="y"></ident>
            <ident type="string" n="8" userarchive="y"></ident>
            <ident type="string" n="9" userarchive="y"></ident>
            <ident type="string" n="10" userarchive="y"></ident>
            <ident type="string" n="11" userarchive="y"></ident>
            <ident type="string" n="12" userarchive="y"></ident>
            <ident type="string" n="13" userarchive="y"></ident>
            <ident type="string" n="14" userarchive="y"></ident>
            <ident type="string" n="15" userarchive="y"></ident>
            <ident type="string" n="16" userarchive="y"></ident>
            <ident type="string" n="17" userarchive="y"></ident>
            <ident type="string" n="18" userarchive="y"></ident>
            <ident type="string" n="19" userarchive="y"></ident>
        </vor-radio>
        <ils-radio>
            <selection type="int" userarchive="y">0</selection>
            <preset type="double" n="0" userarchive="y">108.00</preset>
            <preset type="double" n="1" userarchive="y">108.00</preset>
            <preset type="double" n="2" userarchive="y">108.00</preset>
            <preset type="double" n="3" userarchive="y">108.00</preset>
            <preset type="double" n="4" userarchive="y">108.00</preset>
            <preset type="double" n="5" userarchive="y">108.00</preset>
            <preset type="double" n="6" userarchive="y">108.00</preset>
            <preset type="double" n="7" userarchive="y">108.00</preset>
            <preset type="double" n="8" userarchive="y">108.00</preset>
            <preset type="double" n="9" userarchive="y">108.00</preset>
            <preset type="double" n="10" userarchive="y">108.00</preset>
            <preset type="double" n="11" userarchive="y">108.00</preset>
            <preset type="double" n="12" userarchive="y">108.00</preset>
            <preset type="double" n="13" userarchive="y">108.00</preset>
            <preset type="double" n="14" userarchive="y">108.00</preset>
            <preset type="double" n="15" userarchive="y">108.00</preset>
            <preset type="double" n="16" userarchive="y">108.00</preset>
            <preset type="double" n="17" userarchive="y">108.00</preset>
            <preset type="double" n="18" userarchive="y">108.00</preset>
            <preset type="double" n="19" userarchive="y">108.00</preset>
            <ident userarchive="y" type="string" n="0"></ident>
            <ident type="string" n="1" userarchive="y"></ident>
            <ident type="string" n="2" userarchive="y"></ident>
            <ident type="string" n="3" userarchive="y"></ident>
            <ident type="string" n="4" userarchive="y"></ident>
            <ident type="string" n="5" userarchive="y"></ident>
            <ident type="string" n="6" userarchive="y"></ident>
            <ident type="string" n="7" userarchive="y"></ident>
            <ident type="string" n="8" userarchive="y"></ident>
            <ident type="string" n="9" userarchive="y"></ident>
            <ident type="string" n="10" userarchive="y"></ident>
            <ident type="string" n="11" userarchive="y"></ident>
            <ident type="string" n="12" userarchive="y"></ident>
            <ident type="string" n="13" userarchive="y"></ident>
            <ident type="string" n="14" userarchive="y"></ident>
            <ident type="string" n="15" userarchive="y"></ident>
            <ident type="string" n="16" userarchive="y"></ident>
            <ident type="string" n="17" userarchive="y"></ident>
            <ident type="string" n="18" userarchive="y"></ident>
            <ident type="string" n="19" userarchive="y"></ident>
        </ils-radio>
        <comm n="1">
            <volume>0</volume>
        </comm>
        <comm-radio>
            <selection type="int" userarchive="y">0</selection>
            <vol type="double">0.0</vol>
            <rset_comp_switch type="int">0</rset_comp_switch>
            <preset type="double" n="0" userarchive="y">118.00</preset>
            <preset type="double" n="1" userarchive="y">118.00</preset>
            <preset type="double" n="2" userarchive="y">118.00</preset>
            <preset type="double" n="3" userarchive="y">118.00</preset>
            <preset type="double" n="4" userarchive="y">118.00</preset>
            <preset type="double" n="5" userarchive="y">118.00</preset>
            <preset type="double" n="6" userarchive="y">118.00</preset>
            <preset type="double" n="7" userarchive="y">118.00</preset>
            <preset type="double" n="8" userarchive="y">118.00</preset>
            <preset type="double" n="9" userarchive="y">118.00</preset>
            <preset type="double" n="10" userarchive="y">118.00</preset>
            <preset type="double" n="11" userarchive="y">118.00</preset>
            <preset type="double" n="12" userarchive="y">118.00</preset>
            <preset type="double" n="13" userarchive="y">118.00</preset>
            <preset type="double" n="14" userarchive="y">118.00</preset>
            <preset type="double" n="15" userarchive="y">118.00</preset>
            <preset type="double" n="16" userarchive="y">118.00</preset>
            <preset type="double" n="17" userarchive="y">118.00</preset>
            <preset type="double" n="18" userarchive="y">118.00</preset>
            <preset type="double" n="19" userarchive="y">118.00</preset>
            <ident userarchive="y" type="string" n="0"></ident>
            <ident type="string" n="1" userarchive="y"></ident>
            <ident type="string" n="2" userarchive="y"></ident>
            <ident type="string" n="3" userarchive="y"></ident>
            <ident type="string" n="4" userarchive="y"></ident>
            <ident type="string" n="5" userarchive="y"></ident>
            <ident type="string" n="6" userarchive="y"></ident>
            <ident type="string" n="7" userarchive="y"></ident>
            <ident type="string" n="8" userarchive="y"></ident>
            <ident type="string" n="9" userarchive="y"></ident>
            <ident type="string" n="10" userarchive="y"></ident>
            <ident type="string" n="11" userarchive="y"></ident>
            <ident type="string" n="12" userarchive="y"></ident>
            <ident type="string" n="13" userarchive="y"></ident>
            <ident type="string" n="14" userarchive="y"></ident>
            <ident type="string" n="15" userarchive="y"></ident>
            <ident type="string" n="16" userarchive="y"></ident>
            <ident type="string" n="17" userarchive="y"></ident>
            <ident type="string" n="18" userarchive="y"></ident>
            <ident type="string" n="19" userarchive="y"></ident>
        </comm-radio>
        <adf-radio>
            <selection type="int" userarchive="y">0</selection>
            <preset type="double" n="0" userarchive="y">350</preset>
            <preset type="double" n="1" userarchive="y">350</preset>
            <preset type="double" n="2" userarchive="y">350</preset>
            <preset type="double" n="3" userarchive="y">350</preset>
            <preset type="double" n="4" userarchive="y">350</preset>
            <preset type="double" n="5" userarchive="y">350</preset>
            <preset type="double" n="6" userarchive="y">350</preset>
            <preset type="double" n="7" userarchive="y">350</preset>
            <preset type="double" n="8" userarchive="y">350</preset>
            <ident userarchive="y" type="string" n="0"></ident>
            <ident type="string" n="1" userarchive="y"></ident>
            <ident type="string" n="2" userarchive="y"></ident>
            <ident type="string" n="3" userarchive="y"></ident>
            <ident type="string" n="4" userarchive="y"></ident>
            <ident type="string" n="5" userarchive="y"></ident>
            <ident type="string" n="6" userarchive="y"></ident>
            <ident type="string" n="7" userarchive="y"></ident>
            <ident type="string" n="8" userarchive="y"></ident>
            <animation>
                <select n="0" type="bool">true</select>
                <select n="1" type="bool">false</select>
                <select n="2" type="bool">false</select>
                <select n="3" type="bool">false</select>
                <select n="4" type="bool">false</select>
                <select n="5" type="bool">false</select>
                <select n="6" type="bool">false</select>
                <select n="7" type="bool">false</select>
                <select n="8" type="bool">false</select>
                <select n="9" type="bool">false</select>
            </animation>
        </adf-radio>
        <misc-panel-1>
            <rsbn-arc type="bool">false</rsbn-arc>
            <cone-auto-man type="bool">false</cone-auto-man>
            <fast-heat type="bool">false</fast-heat>
            <auto-off type="bool">false</auto-off>
            <hlt-heat type="bool">false</hlt-heat>
            <hlt-heat-rqst type="bool">false</hlt-heat-rqst>
            <guard type="bool">false</guard>
        </misc-panel-1>
        <center-console>
            <selected type="string">none</selected>
            <!--
                none
                hmcs
            -->
        </center-console>
    </instrumentation>

    <ai>
        <submodels>
            <submodel n="0">
                <count type="int">0</count>
            </submodel>
            <submodel n="1">
                <count type="int">0</count>
            </submodel>
            <submodel n="2">
                <count type="int">0</count>
            </submodel>
            <submodel n="3">
                <count type="int">0</count>
            </submodel>
            <submodel n="4">
                <count type="int">25</count>
            </submodel>
            <submodel n="5">
                <count type="int">125</count>
            </submodel>
            <submodel n="6">
                <count type="int">25</count>
            </submodel>
            <submodel n="7">
                <count type="int">125</count>
            </submodel>
            <submodel n="22">
                <count type="int">0</count>
            </submodel>
            <submodel n="23">
                <count type="int">0</count>
            </submodel>
            <submodel n="24">
                <count type="int">0</count>
            </submodel>
            <submodel n="25">
                <count type="int">0</count>
            </submodel>
        </submodels>
    </ai>

    <!-- i'd like to do this with all the pids, but no time right now -->
    <autopilot>
        <settings>
            <roll-final>
                <kp type="double">0.175</kp>
                <ti type="double">0.45</ti>
                <td type="double">0.001</td>
                <u_min type="double">-1.0</u_min>
                <u_max type="double">1.0</u_max>
            </roll-final>
        </settings>
    </autopilot>

    
    <fdm>
        <jsbsim include="Systems/jsbsim-props-init.xml"/>
    </fdm>

    <sounds>
        <pylon_disconnect type="int">0</pylon_disconnect>
        <distant_explosion type="int">0</distant_explosion>
    </sounds>

    <!-- Keyboard Shortcuts -->
    <input>
        <keyboard include="Systems/keyboard.xml" />
    </input>

    <!-- Effects -->
    <gear>
        <gear n="0">
            <tyre-smoke type="int">0</tyre-smoke>
            <sprayspeed-ms type="double">0</sprayspeed-ms>
            <spray-density type="double">0</spray-density>
            <caster-angle-deg-damped type="double">0</caster-angle-deg-damped>
        </gear>
        <gear n="1">
            <tyre-smoke type="int">0</tyre-smoke>
            <sprayspeed-ms type="double">0</sprayspeed-ms>
            <spray-density type="double">0</spray-density>
        </gear>
        <gear n="2">
            <tyre-smoke type="int">0</tyre-smoke>
            <sprayspeed-ms type="double">0</sprayspeed-ms>
            <spray-density type="double">0</spray-density>
        </gear>
    </gear>

    <velocities>
        <tas-kt type="double">0.0001</tas-kt>
        <test type="double">0</test>
    </velocities>

    <payload>
        <armament>
            <modelsUseCase type="bool">true</modelsUseCase>
            <modelsUpperCase type="bool">true</modelsUpperCase>
            <MP-lat type="string">rotors/main/blade[0]/flap-deg</MP-lat>
            <MP-lon type="string">rotors/main/blade[1]/flap-deg</MP-lon>
            <MP-alt type="string">rotors/main/blade[2]/flap-deg</MP-alt>
            <pylon-offset type="int">0</pylon-offset>
            <pylon-stations>controls/armament</pylon-stations>
            <station-name type="string">station</station-name>
            <models type="string">Aircraft/MiG-21bis/Models/Stores/</models>
            <msg type="bool">true</msg>
            <tacview type="bool">true</tacview>
            <damage type="bool">true</damage>
            <GSh-30>
                <ammo type="double">200</ammo>
                <trigger type="bool">false</trigger>
                <jammed type="bool">false</jammed>
            </GSh-30>
            <enable-craters type="bool">true</enable-craters>
            <MLW-bearing type="double">0</MLW-bearing>
            <MLW-count type="int">0</MLW-count>
            <MLW-launcher type="string"></MLW-launcher>
            <MAW-bearing type="double">0</MAW-bearing>
            <MAW-active type="bool">false</MAW-active>
            <spike type="bool">false</spike>

            <r-3s>
                <!--name-->
                <type-id type="int">78</type-id>
                <long-name type="string">Vympel R-3S</long-name> <!--Longer name of the weapon-->
                <short-name type="string">R-3S</short-name> <!--Shorter name of the weapon-->
                <!--detection and firing-->
                <max-fire-range-nm type="double">10</max-fire-range-nm> <!-- max range that the FCS allows firing -->
                <min-fire-range-nm type="double">0.001</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
                <FCS-field-deg type="int">60</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
                <class type="string">AG</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
                <fire-msg type="string">Fox 2</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
                <seeker-beam-width-deg type="double">1.5</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
                <lock-on-after-launch type="bool">false</lock-on-after-launch> <!--bool. LOAL supported. For loal to work [optional]-->
                <auto-switch-target-allowed type="bool">false</auto-switch-target-allowed> <!--bool. Can switch target at will if it loses lock [optional]-->
                <prowl-flight type="string">gyro-pitch</prowl-flight>
                <switch-time-sec type="double">5</switch-time-sec>
                <!--navigation, guiding and seekerhead-->
                <seeker-field-deg type="int">80</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
                <guidance type="string">heat</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
                <navigation type="string">PN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
                <all-aspect type="bool">true</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
                <seeker-angular-speed-dps type="double">27</seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
                <lock-on-sun-deg type="double">10.0</lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
                <reaquire type="bool">true</reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
                <loft-altitude type="int">0</loft-altitude>
                <!--engine-->
                <thrust-lbf-stage-1 type="double">3821</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
                <thrust-lbf-stage-2 type="double">0</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
                <stage-1-duration-sec type="double">3.5</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
                <stage-2-duration-sec type="double">0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
                <weight-fuel-lbm type="double">55</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
                <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
                <!--aerodynamic-->
                <weight-launch-lbs type="double">165</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
                <drag-coeff type="double">0.55</drag-coeff> <!-- drag coefficient -->
                <cross-section-sqft type="double">0.143</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
                <max-g type="int">28</max-g> <!-- max G-force the missile can pull at sealevel -->
                <min-speed-for-guiding-mach type="double">0.8</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
                <!--detonation-->
                <weight-warhead-lbs type="double">20</weight-warhead-lbs> <!-- warhead weight -->
                <arming-time-sec type="double">1.4</arming-time-sec> <!-- time for weapon to arm -->
                <self-destruct-time-sec type="double">43</self-destruct-time-sec> <!-- time before selfdestruct -->
                <self-destruct-at-lock-lost type="bool">true</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
                <max-report-distance type="double">65</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
                <hit-everything-nearby type="bool">false</hit-everything-nearby> <!-- acts like a bomb, will check for nearby targets if true (99% of the time should be false) -->
                <!--avionics sounds-->
                <vol-search type="double">0.075</vol-search> <!-- sound volume when searcing -->
                <vol-track type="double">0.25</vol-track> <!-- sound volume when having lock -->
                <!--launching conditions-->
                <rail type="bool">true</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
                <rail-length-m type="double">2.667</rail-length-m> <!-- length of tube/rail -->
                <rail-point-forward type="bool">true</rail-point-forward> <!-- true for rail, false for rail/tube with a pitch -->
                <!--countermeasures-->
                <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
                <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
            </r-3s>

            <r-3u>
                <!--name-->
                <type-id type="int">78</type-id>
                <long-name type="string">Vympel R-3U</long-name> <!--Longer name of the weapon-->
                <short-name type="string">R-3U</short-name> <!--Shorter name of the weapon-->
                <!--detection and firing-->
                <max-fire-range-nm type="double">0.01</max-fire-range-nm> <!-- max range that the FCS allows firing -->
                <min-fire-range-nm type="double">0.001</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
                <FCS-field-deg type="int">60</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
                <class type="string">AG</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
                <fire-msg type="string">Fox 2</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
                <seeker-beam-width-deg type="double">1.5</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
                <lock-on-after-launch type="bool">false</lock-on-after-launch> <!--bool. LOAL supported. For loal to work [optional]-->
                <auto-switch-target-allowed type="bool">false</auto-switch-target-allowed> <!--bool. Can switch target at will if it loses lock [optional]-->
                <prowl-flight type="string">gyro-pitch</prowl-flight>
                <switch-time-sec type="double">5</switch-time-sec>
                <!--navigation, guiding and seekerhead-->
                <seeker-field-deg type="int">80</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
                <guidance type="string">heat</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
                <navigation type="string">PN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
                <all-aspect type="bool">true</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
                <seeker-angular-speed-dps type="double">27</seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
                <lock-on-sun-deg type="double">10.0</lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
                <reaquire type="bool">true</reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
                <loft-altitude type="int">0</loft-altitude>
                <!--engine-->
                <thrust-lbf-stage-1 type="double">1</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
                <thrust-lbf-stage-2 type="double">0</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
                <stage-1-duration-sec type="double">1</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
                <stage-2-duration-sec type="double">0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
                <weight-fuel-lbm type="double">1</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
                <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
                <!--aerodynamic-->
                <weight-launch-lbs type="double">165</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
                <drag-coeff type="double">0.55</drag-coeff> <!-- drag coefficient -->
                <cross-section-sqft type="double">0.143</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
                <max-g type="int">28</max-g> <!-- max G-force the missile can pull at sealevel -->
                <min-speed-for-guiding-mach type="double">0.8</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
                <!--detonation-->
                <weight-warhead-lbs type="double">20</weight-warhead-lbs> <!-- warhead weight -->
                <arming-time-sec type="double">1.4</arming-time-sec> <!-- time for weapon to arm -->
                <self-destruct-time-sec type="double">43</self-destruct-time-sec> <!-- time before selfdestruct -->
                <self-destruct-at-lock-lost type="bool">true</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
                <max-report-distance type="double">65</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
                <hit-everything-nearby type="bool">false</hit-everything-nearby> <!-- acts like a bomb, will check for nearby targets if true (99% of the time should be false) -->
                <!--avionics sounds-->
                <vol-search type="double">0.075</vol-search> <!-- sound volume when searcing -->
                <vol-track type="double">0.25</vol-track> <!-- sound volume when having lock -->
                <!--launching conditions-->
                <rail type="bool">true</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
                <rail-length-m type="double">2.667</rail-length-m> <!-- length of tube/rail -->
                <rail-point-forward type="bool">true</rail-point-forward> <!-- true for rail, false for rail/tube with a pitch -->
                <!--countermeasures-->
                <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
                <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
            </r-3u>

            <r-3r>
                <!--name-->
                <type-id type="int">77</type-id>
                <long-name type="string">Vympel R-3R</long-name> <!--Longer name of the weapon-->
                <short-name type="string">R-3R</short-name> <!--Shorter name of the weapon-->
                <!--detection and firing-->
                <max-fire-range-nm type="double">10</max-fire-range-nm> <!-- max range that the FCS allows firing -->
                <min-fire-range-nm type="double">0.001</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
                <FCS-field-deg type="int">60</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
                <class type="string">A</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
                <fire-msg type="string">Fox 1</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
                <seeker-beam-width-deg type="double">1.5</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
                <lock-on-after-launch type="bool">false</lock-on-after-launch> <!--bool. LOAL supported. For loal to work [optional]-->
                <auto-switch-target-allowed type="bool">false</auto-switch-target-allowed> <!--bool. Can switch target at will if it loses lock [optional]-->
                <prowl-flight type="string">gyro-pitch</prowl-flight>
                <switch-time-sec type="double">5</switch-time-sec>
                <!--navigation, guiding and seekerhead-->
                <seeker-field-deg type="int">80</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
                <guidance type="string">semi-radar</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
                <navigation type="string">PN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
                <all-aspect type="bool">true</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
                <seeker-angular-speed-dps type="double">27</seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
                <lock-on-sun-deg type="double">10.0</lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
                <reaquire type="bool">true</reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
                <loft-altitude type="int">0</loft-altitude>
                <!--engine-->
                <thrust-lbf-stage-1 type="double">3821</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
                <thrust-lbf-stage-2 type="double">0</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
                <stage-1-duration-sec type="double">3.5</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
                <stage-2-duration-sec type="double">0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
                <weight-fuel-lbm type="double">55</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
                <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
                <!--aerodynamic-->
                <weight-launch-lbs type="double">165</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
                <drag-coeff type="double">0.55</drag-coeff> <!-- drag coefficient -->
                <cross-section-sqft type="double">0.143</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
                <max-g type="int">28</max-g> <!-- max G-force the missile can pull at sealevel -->
                <min-speed-for-guiding-mach type="double">0.8</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
                <!--detonation-->
                <weight-warhead-lbs type="double">20</weight-warhead-lbs> <!-- warhead weight -->
                <arming-time-sec type="double">1.4</arming-time-sec> <!-- time for weapon to arm -->
                <self-destruct-time-sec type="double">43</self-destruct-time-sec> <!-- time before selfdestruct -->
                <self-destruct-at-lock-lost type="bool">true</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
                <max-report-distance type="double">65</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
                <hit-everything-nearby type="bool">false</hit-everything-nearby> <!-- acts like a bomb, will check for nearby targets if true (99% of the time should be false) -->
                <!--avionics sounds-->
                <vol-search type="double">0.075</vol-search> <!-- sound volume when searcing -->
                <vol-track type="double">0.25</vol-track> <!-- sound volume when having lock -->
                <!--launching conditions-->
                <rail type="bool">true</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
                <rail-length-m type="double">2.667</rail-length-m> <!-- length of tube/rail -->
                <rail-point-forward type="bool">true</rail-point-forward> <!-- true for rail, false for rail/tube with a pitch -->
                <!--countermeasures-->
                <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
                <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
            </r-3r>

            <r-60>
                <!-- launch reference: https://www.liveleak.com/view?i=879_1404076874 @ 2:25 -->
                <!-- info on Komar seeker head: http://www.ausairpower.net/APA-Legacy-SAM-Upgrades.html -->
                <!--detection and firing-->
                <type-id type="int">80</type-id>
                <max-fire-range-nm type="double">4.32</max-fire-range-nm> <!-- max range that the FCS allows firing -->
                <min-fire-range-nm type="double">0.001</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
                <FCS-field-deg type="int">24</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
                <class type="string">AG</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
                <fire-msg type="string">Fox 2</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
                <coolable type="bool">false</coolable> <!-- If the seeker supports being cooled. (AIM-9L or later supports) -->
                <cool-time type="double">1000</cool-time> <!-- Time to cold the seeker from fully warm. -->
                <cool-duration type="int">0</cool-duration> <!-- Typically 2.5 hours for cooling fluids. Much higher for electrical. -->
                <warm-detect-range-nm type="double">4.0</warm-detect-range-nm> <!-- Current guidance mode detect range. (when warm) -->
                <detect-range-nm type="double">4.0</detect-range-nm> <!-- Current guidance mode default detect range. (when cold) -->
                <seeker-beam-width-deg type="double">2.0</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
                <ready-time type="double">0.2</ready-time> <!-- time to get ready after standby mode. -->
                <!--navigation, guiding and seekerhead-->
                <seeker-field-deg type="int">24</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
                <guidance type="string">heat</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
                <navigation type="string">APN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
                <all-aspect type="bool">false</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
                <seeker-angular-speed-dps type="double">35</seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
                <lock-on-sun-deg type="double">15.0</lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
                <loft-altitude type="int">0</loft-altitude> <!-- if 0 then no snap up. Below 10000 then cruise altitude above ground. Above 10000 max altitude it will snap up to. -->
                <terrain-follow type="bool">false</terrain-follow> <!-- bool. used for anti-ship missiles that should be able to terrain follow instead of purely sea skimming. -->
                <reaquire type="bool">false</reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
                <!--engine-->
                <thrust-lbf-stage-1 type="double">1281.41</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
                <thrust-lbf-stage-2 type="double">0.0</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
                <stage-1-duration-sec type="double">4.0</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
                <stage-2-duration-sec type="double">0.0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
                <weight-fuel-lbm type="double">50</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
                <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
                <!--aerodynamic-->
                <weight-launch-lbs type="double">96</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
                <drag-coeff type="double">0.43</drag-coeff> <!-- drag coefficient -->
                <cross-section-sqft type="double">0.12</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
                <max-g type="int">35</max-g> <!-- max G-force the missile can pull at sealevel -->
                <min-speed-for-guiding-mach type="double">0.7</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
                <!--detonation-->
                <weight-warhead-lbs type="double">6.6</weight-warhead-lbs> <!-- warhead weight -->
                <arming-time-sec type="double">0.4</arming-time-sec> <!-- time for weapon to arm -->
                <self-destruct-time-sec type="double">43</self-destruct-time-sec> <!-- time before selfdestruct -->
                <self-destruct-at-lock-lost type="double">25</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
                <max-report-distance type="double">65</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
                <!--avionics sounds-->
                <vol-search type="double">0</vol-search> <!-- sound volume when searcing -->
                <vol-track type="double">0</vol-track> <!-- sound volume when having lock -->
                <!--launching conditions-->
                <rail type="bool">true</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
                <rail-length-m type="double">3.0</rail-length-m> <!-- length of tube/rail -->
                <rail-point-forward type="bool">true</rail-point-forward> <!-- true for rail, false for rail/tube with a pitch -->
                <drop-time type="double">0.0</drop-time> <!-- Time to fall before stage 1 thrust starts. -->
                <!--countermeasures-->
                <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
                <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
                <!--datalink-->
                <telemetry type="bool">false</telemetry> <!-- Boolean. Data link back to aircraft when missile is flying. [optional] -->
                <DLZ type="bool">false</DLZ> <!-- Supports dynamic launch zone info. For now only works with A/A. [optional] -->
            </r-60>

             <r-27r1>
                 <!--detection and firing-->
                <type-id type="int">75</type-id>
                <max-fire-range-nm type="double">39.41</max-fire-range-nm> <!-- max range that the FCS allows firing -->
                <min-fire-range-nm type="double">1.0</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
                <FCS-field-deg type="int">35</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
                <class type="string">A</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
                <fire-msg type="string">Fox 1</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
                <coolable type="bool">false</coolable> <!-- If the seeker supports being cooled. (AIM-9L or later supports) -->
                <cool-time type="double">10000</cool-time> <!-- Time to cold the seeker from fully warm. -->
                <cool-duration type="int">10000</cool-duration> <!-- Typically 2.5 hours for cooling fluids. Much higher for electrical. -->
                <warm-detect-range-nm type="double">10.0</warm-detect-range-nm> <!-- Current guidance mode detect range. (when warm) -->
                <detect-range-nm type="double">10.0</detect-range-nm> <!-- Current guidance mode default detect range. (when cold) -->
                <seeker-beam-width-deg type="double">2.5</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
                <ready-time type="double">0.2</ready-time> <!-- time to get ready after standby mode. -->
                <lock-on-after-launch type="bool">true</lock-on-after-launch> <!--bool. LOAL supported. For loal to work [optional]-->
                <auto-switch-target-allowed type="bool">true</auto-switch-target-allowed> <!--bool. Can switch target at will if it loses lock [optional]-->
                <prowl-flight type="string">gyro-pitch</prowl-flight> <!--unguided/level/gyro-pitch for LOAL and that stuff, when not locked onto stuff.-->
                <switch-time-sec type="double">5.0</switch-time-sec> <!--auto switch of targets in flight: time to scan FoV.-->
                <!--navigation, guiding and seekerhead-->
                <seeker-field-deg type="int">110</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
                <guidance type="string">radar</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
                <navigation type="string">APN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
                <all-aspect type="bool">true</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
                <seeker-angular-speed-dps type="double">14.9</seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
                <lock-on-sun-deg type="double">0.0</lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
                <loft-altitude type="int">40000</loft-altitude> <!-- if 0 then no snap up. Below 10000 then cruise altitude above ground. Above 10000 max altitude it will snap up to. -->
                <terrain-follow type="bool">false</terrain-follow> <!-- bool. used for anti-ship missiles that should be able to terrain follow instead of purely sea skimming. -->
                <reaquire type="bool">true</reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
                <!--engine-->
                <thrust-lbf-stage-1 type="double">8500</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
                <thrust-lbf-stage-2 type="double">700</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
                <stage-1-duration-sec type="double">6.1</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
                <stage-2-duration-sec type="double">14.0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
                <weight-fuel-lbm type="double">300</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
                <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
                <!--aerodynamic-->
                <weight-launch-lbs type="double">560</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
                <drag-coeff type="double">0.5</drag-coeff> <!-- drag coefficient -->
                <cross-section-sqft type="double">0.143</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
                <max-g type="int">28</max-g> <!-- max G-force the missile can pull at sealevel -->
                <min-speed-for-guiding-mach type="double">0.8</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
                <ignore-wind-at-release type="bool">true</ignore-wind-at-release>
                <!--detonation-->
                <weight-warhead-lbs type="double">85.98</weight-warhead-lbs> <!-- warhead weight -->
                <arming-time-sec type="double">1.6</arming-time-sec> <!-- time for weapon to arm -->
                <self-destruct-time-sec type="double">90</self-destruct-time-sec> <!-- time before selfdestruct -->
                <self-destruct-at-lock-lost type="double">25</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
                <max-report-distance type="double">65</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
                <!--avionics sounds-->
                <vol-search type="double">0.0</vol-search> <!-- sound volume when searcing -->
                <vol-track type="double">0.0</vol-track> <!-- sound volume when having lock -->
                <!--launching conditions-->
                <rail type="bool">false</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
                <drop-time type="double">0.0</drop-time> <!-- Time to fall before stage 1 thrust starts. -->
                <!--countermeasures-->
                <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
                <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
                <!--datalink-->
                <telemetry type="bool">true</telemetry> <!-- Boolean. Data link back to aircraft when missile is flying. [optional] -->
                <DLZ type="bool">false</DLZ> <!-- Supports dynamic launch zone info. For now only works with A/A. [optional] -->
            </r-27r1>
            <r-27t1>
                 <!--detection and firing-->
                 <type-id type="int">76</type-id>
                <max-fire-range-nm type="double">39.41</max-fire-range-nm> <!-- max range that the FCS allows firing -->
                <min-fire-range-nm type="double">0.01</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
                <FCS-field-deg type="int">35</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
                <class type="string">AGM</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
                <fire-msg type="string">Fox 2</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
                <coolable type="bool">true</coolable> <!-- If the seeker supports being cooled. (AIM-9L or later supports) -->
                <cool-time type="double">1.5</cool-time> <!-- Time to cold the seeker from fully warm. -->
                <cool-duration type="int">9000</cool-duration> <!-- Typically 2.5 hours for cooling fluids. Much higher for electrical. -->
                <warm-detect-range-nm type="double">6.5</warm-detect-range-nm> <!-- Current guidance mode detect range. (when warm) -->
                <detect-range-nm type="double">8.5</detect-range-nm> <!-- Current guidance mode default detect range. (when cold) -->
                <seeker-beam-width-deg type="double">3.0</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
                <ready-time type="double">0.2</ready-time> <!-- time to get ready after standby mode. -->
                <lock-on-after-launch type="bool">true</lock-on-after-launch> <!--bool. LOAL supported. For loal to work [optional]-->
                <auto-switch-target-allowed type="bool">true</auto-switch-target-allowed> <!--bool. Can switch target at will if it loses lock [optional]-->
                <prowl-flight type="string">gyro-pitch</prowl-flight> <!--unguided/level/gyro-pitch for LOAL and that stuff, when not locked onto stuff.-->
                <switch-time-sec type="double">5.0</switch-time-sec> <!--auto switch of targets in flight: time to scan FoV.-->
                <!--navigation, guiding and seekerhead-->
                <seeker-field-deg type="int">110</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
                <guidance type="string">heat</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
                <navigation type="string">APN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
                <all-aspect type="bool">true</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
                <seeker-angular-speed-dps type="double">14.9</seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
                <lock-on-sun-deg type="double">0.0</lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
                <loft-altitude type="int">40000</loft-altitude> <!-- if 0 then no snap up. Below 10000 then cruise altitude above ground. Above 10000 max altitude it will snap up to. -->
                <terrain-follow type="bool">false</terrain-follow> <!-- bool. used for anti-ship missiles that should be able to terrain follow instead of purely sea skimming. -->
                <reaquire type="bool">true</reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
                <!--engine-->
                <thrust-lbf-stage-1 type="double">8500</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
                <thrust-lbf-stage-2 type="double">700</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
                <stage-1-duration-sec type="double">6.1</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
                <stage-2-duration-sec type="double">14.0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
                <weight-fuel-lbm type="double">300</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
                <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
                <!--aerodynamic-->
                <weight-launch-lbs type="double">560</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
                <drag-coeff type="double">0.5</drag-coeff> <!-- drag coefficient -->
                <cross-section-sqft type="double">0.143</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
                <max-g type="int">28</max-g> <!-- max G-force the missile can pull at sealevel -->
                <min-speed-for-guiding-mach type="double">0.8</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
                <ignore-wind-at-release type="bool">true</ignore-wind-at-release>
                <!--detonation-->
                <weight-warhead-lbs type="double">85.98</weight-warhead-lbs> <!-- warhead weight -->
                <arming-time-sec type="double">1.6</arming-time-sec> <!-- time for weapon to arm -->
                <self-destruct-time-sec type="double">90</self-destruct-time-sec> <!-- time before selfdestruct -->
                <self-destruct-at-lock-lost type="double">25</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
                <max-report-distance type="double">65</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
                <!--avionics sounds-->
                <vol-search type="double">0.0</vol-search> <!-- sound volume when searcing -->
                <vol-track type="double">0.0</vol-track> <!-- sound volume when having lock -->
                <!--launching conditions-->
                <rail type="bool">false</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
                <drop-time type="double">0.0</drop-time> <!-- Time to fall before stage 1 thrust starts. -->
                <!--countermeasures-->
                <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
                <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
                <!--datalink-->
                <telemetry type="bool">true</telemetry> <!-- Boolean. Data link back to aircraft when missile is flying. [optional] -->
                <DLZ type="bool">false</DLZ> <!-- Supports dynamic launch zone info. For now only works with A/A. [optional] -->
            </r-27t1>

            <kh-66>                <!-- lots of info at http://survincity.com/2012/08/x-66-the-product-66-the-first-russian-tactical/ -->
                <!--detection and firing-->
                <type-id type="int">27</type-id>
                <max-fire-range-nm type="double">100.0</max-fire-range-nm> <!-- max range that the FCS allows firing -->
                <min-fire-range-nm type="double">0.5</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
                <FCS-field-deg type="int">15</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
                <class type="string">AGM</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
                <fire-msg type="string">Fox 1</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
                <coolable type="bool">false</coolable> <!-- If the seeker supports being cooled. (AIM-9L or later supports) -->
                <cool-time type="double">0.0</cool-time> <!-- Time to cold the seeker from fully warm. -->
                <cool-duration type="int">0.0</cool-duration> <!-- Typically 2.5 hours for cooling fluids. Much higher for electrical. -->
                <warm-detect-range-nm type="double">100.0</warm-detect-range-nm> <!-- Current guidance mode detect range. (when warm) -->
                <detect-range-nm type="double">100.0</detect-range-nm> <!-- Current guidance mode default detect range. (when cold) -->
                <seeker-beam-width-deg type="double">20.0</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
                <ready-time type="double">0.3</ready-time> <!-- time to get ready after standby mode. -->
                <!--navigation, guiding and seekerhead-->
                <seeker-field-deg type="int">20.0</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
                <guidance type="string">semi-radar</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
                <navigation type="string">APN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
                <all-aspect type="bool">true</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
                <seeker-angular-speed-dps type="double"></seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
                <lock-on-sun-deg type="double"></lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
                <loft-altitude type="int">0</loft-altitude> <!-- if 0 then no snap up. Below 10000 then cruise altitude above ground. Above 10000 max altitude it will snap up to. -->
                <terrain-follow type="bool">false</terrain-follow> <!-- bool. used for anti-ship missiles that should be able to terrain follow instead of purely sea skimming. -->
                <reaquire type="bool">true</reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
                <!--engine-->
                <thrust-lbf-stage-1 type="double">8000</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
                <thrust-lbf-stage-2 type="double">0.0</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
                <stage-1-duration-sec type="double">6.0</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
                <stage-2-duration-sec type="double">0.0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
                <weight-fuel-lbm type="double">61</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
                <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
                <!--aerodynamic-->
                <weight-launch-lbs type="double">633</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
                <drag-coeff type="double">0.5</drag-coeff> <!-- drag coefficient -->
                <cross-section-sqft type="double">0.64</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
                <max-g type="int">15</max-g> <!-- max G-force the missile can pull at sealevel -->
                <min-speed-for-guiding-mach type="double">0.3</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
                <!--detonation-->
                <weight-warhead-lbs type="double">245</weight-warhead-lbs> <!-- warhead weight -->
                <arming-time-sec type="double">0.4</arming-time-sec> <!-- time for weapon to arm -->
                <self-destruct-time-sec type="double">40</self-destruct-time-sec> <!-- time before selfdestruct -->
                <self-destruct-at-lock-lost type="double">40</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
                <max-report-distance type="double">200</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
                <hit-everything-nearby type="bool">true</hit-everything-nearby> <!-- acts like a bomb, will check for nearby targets if true (99% of the time should be false) -->
                <!--avionics sounds-->
                <vol-search type="double">0.0</vol-search> <!-- sound volume when searcing -->
                <vol-track type="double">0.0</vol-track> <!-- sound volume when having lock -->
                <!--launching conditions-->
                <rail type="bool">true</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
                <rail-length-m type="double">1.5</rail-length-m> <!-- length of tube/rail -->
                <rail-point-forward type="bool">true</rail-point-forward> <!-- true for rail, false for rail/tube with a pitch -->
                <drop-time type="double">0.0</drop-time> <!-- Time to fall before stage 1 thrust starts. -->
                <deploy-time type="double">0.0</deploy-time> <!-- Time to deploy wings etc. Time starts when drop ends or rail passed. -->
                <!--countermeasures-->
                <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
                <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
                <!--datalink-->
                <telemetry type="bool">false</telemetry> <!-- Boolean. Data link back to aircraft when missile is flying. [optional] -->
                <DLZ type="bool">false</DLZ> <!-- Supports dynamic launch zone info. For now only works with A/A. [optional] -->
            </kh-66>

            <kh-25mp>
                <!--detection and firing-->
                <type-id type="int">26</type-id>
                <max-fire-range-nm type="double">100.0</max-fire-range-nm> <!-- max range that the FCS allows firing -->
                <min-fire-range-nm type="double">0.5</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
                <FCS-field-deg type="int">15</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
                <class type="string">AGM</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
                <fire-msg type="string">Anti Rad</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
                <coolable type="bool">false</coolable> <!-- If the seeker supports being cooled. (AIM-9L or later supports) -->
                <cool-time type="double">0.0</cool-time> <!-- Time to cold the seeker from fully warm. -->
                <cool-duration type="int">0.0</cool-duration> <!-- Typically 2.5 hours for cooling fluids. Much higher for electrical. -->
                <warm-detect-range-nm type="double">40.0</warm-detect-range-nm> <!-- Current guidance mode detect range. (when warm) -->
                <detect-range-nm type="double">40.0</detect-range-nm> <!-- Current guidance mode default detect range. (when cold) -->
                <seeker-beam-width-deg type="double">20.0</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
                <ready-time type="double">0.3</ready-time> <!-- time to get ready after standby mode. -->
                <lock-on-after-launch type="bool">true</lock-on-after-launch> <!--bool. LOAL supported. For loal to work [optional]-->
                <auto-switch-target-allowed type="bool">true</auto-switch-target-allowed> <!--bool. Can switch target at will if it loses lock [optional]-->
                <prowl-flight type="string">gyro-pitch</prowl-flight> <!--unguided/level/gyro-pitch for LOAL and that stuff, when not locked onto stuff.-->
                <switch-time-sec type="double">5.0</switch-time-sec> <!--auto switch of targets in flight: time to scan FoV.-->
                <!--navigation, guiding and seekerhead-->
                <seeker-field-deg type="int">20.0</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
                <guidance type="string">radiation</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
                <navigation type="string">PN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
                <all-aspect type="bool">true</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
                <seeker-angular-speed-dps type="double"></seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
                <lock-on-sun-deg type="double"></lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
                <loft-altitude type="int">0</loft-altitude> <!-- if 0 then no snap up. Below 10000 then cruise altitude above ground. Above 10000 max altitude it will snap up to. -->
                <terrain-follow type="bool">false</terrain-follow> <!-- bool. used for anti-ship missiles that should be able to terrain follow instead of purely sea skimming. -->
                <reaquire type="bool">true</reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
                <!--engine-->
                <thrust-lbf-stage-1 type="double">1200</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
                <thrust-lbf-stage-2 type="double">0.0</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
                <stage-1-duration-sec type="double">70.0</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
                <stage-2-duration-sec type="double">0.0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
                <weight-fuel-lbm type="double">120</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
                <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
                <!--aerodynamic-->
                <weight-launch-lbs type="double">695</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
                <drag-coeff type="double">0.5</drag-coeff> <!-- drag coefficient -->
                <cross-section-sqft type="double">0.635</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
                <max-g type="int">8</max-g> <!-- max G-force the missile can pull at sealevel -->
                <min-speed-for-guiding-mach type="double">0.3</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
                <!--detonation-->
                <weight-warhead-lbs type="double">190</weight-warhead-lbs> <!-- warhead weight -->
                <arming-time-sec type="double">0.4</arming-time-sec> <!-- time for weapon to arm -->
                <self-destruct-time-sec type="double">180</self-destruct-time-sec> <!-- time before selfdestruct -->
                <self-destruct-at-lock-lost type="bool">false</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
                <max-report-distance type="double">65</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
                <hit-everything-nearby type="bool">false</hit-everything-nearby> <!-- acts like a bomb, will check for nearby targets if true (99% of the time should be false) -->
                <!--avionics sounds-->
                <vol-search type="double">0.0</vol-search> <!-- sound volume when searcing -->
                <vol-track type="double">0.0</vol-track> <!-- sound volume when having lock -->
                <!--launching conditions-->
                <rail type="bool">true</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
                <rail-length-m type="double">1.5</rail-length-m> <!-- length of tube/rail -->
                <rail-point-forward type="bool">true</rail-point-forward> <!-- true for rail, false for rail/tube with a pitch -->
                <drop-time type="double">0.5</drop-time> <!-- Time to fall before stage 1 thrust starts. -->
                <deploy-time type="double">0.0</deploy-time> <!-- Time to deploy wings etc. Time starts when drop ends or rail passed. -->
                <!--countermeasures-->
                <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
                <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
                <!--datalink-->
                <telemetry type="bool">false</telemetry> <!-- Boolean. Data link back to aircraft when missile is flying. [optional] -->
                <DLZ type="bool">false</DLZ> <!-- Supports dynamic launch zone info. For now only works with A/A. [optional] -->
            </kh-25mp>

            <template>
                <!--name-->
                <type-id type="int"></type-id><!-- must match the ID in damage.nas -->
                <long-name type="string"></long-name> <!--Longer name of the weapon-->
                <short-name type="string"></short-name> <!--Shorter name of the weapon-->
                <!--detection and firing-->
                <max-fire-range-nm type="double"></max-fire-range-nm> <!-- max range that the FCS allows firing -->
                <min-fire-range-nm type="double"></min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
                <FCS-field-deg type="int"></FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
                <class type="string"></class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
                <fire-msg type="string"></fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
                <coolable type="bool"></coolable> <!-- If the seeker supports being cooled. (AIM-9L or later supports) -->
                <cool-time type="double"></cool-time> <!-- Time to cold the seeker from fully warm. -->
                <cool-duration type="int"></cool-duration> <!-- Typically 2.5 hours for cooling fluids. Much higher for electrical. -->
                <warm-detect-range-nm type="double"></warm-detect-range-nm> <!-- Current guidance mode detect range. (when warm) -->
                <detect-range-nm type="double"></detect-range-nm> <!-- Current guidance mode default detect range. (when cold) -->
                <seeker-beam-width-deg type="double"></seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
                <ready-time type="double"></ready-time> <!-- time to get ready after standby mode. -->
                <lock-on-after-launch type="bool"></lock-on-after-launch> <!--bool. LOAL supported. For loal to work [optional]-->
                <auto-switch-target-allowed type="bool"></auto-switch-target-allowed> <!--bool. Can switch target at will if it loses lock [optional]-->
                <prowl-flight type="string"></prowl-flight> <!--unguided/level/gyro-pitch for LOAL and that stuff, when not locked onto stuff.-->
                <switch-time-sec type="double"></switch-time-sec> <!--auto switch of targets in flight: time to scan FoV.-->
                <!--navigation, guiding and seekerhead-->
                <seeker-field-deg type="int"></seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
                <guidance type="string"></guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
                <navigation type="string"></navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
                <proportionality-constant type="double"></proportionality-constant> <!-- Constant for how sensitive proportional navigation is to target speed/acc. Normally between 3-6. [optional] -->
                <all-aspect type="bool"></all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
                <seeker-angular-speed-dps type="double"></seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
                <lock-on-sun-deg type="double"></lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
                <loft-altitude type="int"></loft-altitude> <!-- if 0 then no snap up. Below 10000 then cruise altitude above ground. Above 10000 max altitude it will snap up to. -->
                <terrain-follow type="bool"></terrain-follow> <!-- bool. used for anti-ship missiles that should be able to terrain follow instead of purely sea skimming. -->
                <reaquire type="bool"></reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
                <max-pitch-deg type="double"></max-pitch-deg> <!--After propulsion it will not be able to steer up more than this. [optional]-->
                <!--engine-->
                <thrust-lbf-stage-1 type="double"></thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
                <thrust-lbf-stage-2 type="double"></thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
                <stage-1-duration-sec type="double"></stage-1-duration-sec> <!-- stage 1 duration [optional] -->
                <stage-2-duration-sec type="double"></stage-2-duration-sec> <!-- stage 2 duration [optional] -->
                <weight-fuel-lbm type="double"></weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
                <vector-thrust type="bool"></vector-thrust> <!-- Boolean. [optional] -->
                <!--aerodynamic-->
                <weight-launch-lbs type="double"></weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
                <drag-coeff type="double"></drag-coeff> <!-- drag coefficient -->
                <cross-section-sqft type="double"></cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
                <max-g type="int"></max-g> <!-- max G-force the missile can pull at sealevel -->
                <min-speed-for-guiding-mach type="double"></min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
                <ignore-wind-at-release type="bool"></ignore-wind-at-release> <!--Boolean. If true dropped weapons will ignore sideslip and AOA and start flying in aircraft bore direction.-->
                <lateral-dps type="double"></lateral-dps> <!--Lateral speed in degrees per second. This is mostly for cosmetics.-->
                <!--detonation-->
                <weight-warhead-lbs type="double"></weight-warhead-lbs> <!-- warhead weight -->
                <arming-time-sec type="double"></arming-time-sec> <!-- time for weapon to arm -->
                <self-destruct-time-sec type="double"></self-destruct-time-sec> <!-- time before selfdestruct -->
                <self-destruct-at-lock-lost type="bool"></self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
                <max-report-distance type="double"></max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
                <hit-everything-nearby type="bool"></hit-everything-nearby> <!-- acts like a bomb, will check for nearby targets if true (99% of the time should be false) -->
                <!--avionics sounds-->
                <vol-search type="double"></vol-search> <!-- sound volume when searcing -->
                <vol-track type="double"></vol-track> <!-- sound volume when having lock -->
                <!--launching conditions-->
                <rail type="bool"></rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
                <rail-length-m type="double"></rail-length-m> <!-- length of tube/rail -->
                <rail-point-forward type="bool"></rail-point-forward> <!-- true for rail, false for rail/tube with a pitch -->
                <rail-pitch-deg type="double"></rail-pitch-deg> <!-- Only used when rail is not forward. 90 for vertical tube. -->
                <drop-time type="double"></drop-time> <!-- Time to fall before stage 1 thrust starts. -->
                <deploy-time type="double"></deploy-time> <!-- Time to deploy wings etc. Time starts when drop ends or rail passed. -->
                <!--countermeasures-->
                <chaff-resistnace type="double"></chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
                <flare-resistance type="double"></flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
                <!--datalink-->
                <telemetry type="bool"></telemetry> <!-- Boolean. Data link back to aircraft when missile is flying. [optional] -->
                <DLZ type="bool"></DLZ> <!-- Supports dynamic launch zone info. For now only works with A/A. [optional] -->
                <DLZ-optimal-alt-feet type="double"></DLZ-optimal-alt-feet> <!-- Minimum altitude required to hit the target at max range. -->
                <DLZ-optimal-closing-mach type="double"></DLZ-optimal-closing-mach> <!-- Closing speed required to hit the target at max range at minimum altitude. -->
            </template>
        </armament>
    </payload>

    <!-- Nasal Scripts -->
    <nasal>
        <notifications>
            <file>Aircraft/MiG-21bis/Nasal/ArmamentNotification.nas</file>
            <file>Aircraft/MiG-21bis/Nasal/GeoBridgedTransmitter.nas</file>
        </notifications>
        <mig21>             <file>Aircraft/MiG-21bis/Nasal/MiG21bis.nas</file>          </mig21>            <!-- odds and sods -->
        <MiG-21bis>         <file>Aircraft/MiG-21bis/Nasal/liveries.nas</file>          </MiG-21bis>        <!-- liveries -->
        <mpdb>              <file>Aircraft/MiG-21bis/Nasal/mp_db.nas</file>             </mpdb>
        <engine>            <file>Aircraft/MiG-21bis/Nasal/engine.nas</file>            </engine>            <!-- liveries -->
        <sounds>            <file>Aircraft/MiG-21bis/Nasal/sounds.nas</file>            </sounds>            <!-- liveries -->
        <lights>            <file>Aircraft/MiG-21bis/Nasal/Lights.nas</file>            </lights>
        <Eject>             <file>Aircraft/MiG-21bis/Nasal/eject.nas</file>             </Eject>            <!-- depreciated -->
        <tyresmoke>         <file>Aircraft/MiG-21bis/Nasal/tyresmoke.nas</file>         </tyresmoke>
        <radar_logic>       <file>Aircraft/MiG-21bis/Nasal/radar-logic.nas</file>       </radar_logic>        <!-- radar logic and missile locking -->
        <armament>          <file>Aircraft/MiG-21bis/Nasal/guided-missiles.nas</file>   </armament>            <!-- guided missile control, oprf standard -->
        <arm_locking>       <file>Aircraft/MiG-21bis/Nasal/armament-locking.nas</file>  </arm_locking>        <!-- radar locks and missile in-flight logic -->
        <radar_canvas>      <file>Aircraft/MiG-21bis/Nasal/radar-canvas.nas</file>      </radar_canvas>        <!-- radar canvas -->
        <payloads>          <file>Aircraft/MiG-21bis/Nasal/payloads.nas</file>          </payloads>            <!-- store handling -->
        <gunsight_logic>    <file>Aircraft/MiG-21bis/Nasal/gunsight-logic.nas</file>    </gunsight_logic>    <!-- gunsight logic -->
        <gunsight_canvas>   <file>Aircraft/MiG-21bis/Nasal/gunsight-canvas.nas</file>   </gunsight_canvas>    <!-- gunsight canvas -->
        <blackout>          <file>Aircraft/MiG-21bis/Nasal/blackout.nas</file>          </blackout>            <!-- legacy blackout code -->
        <damage>            <file>Aircraft/MiG-21bis/Nasal/damage.nas</file>            </damage>            <!-- oprf damage code -->
        <crashandstress>    <file>Aircraft/MiG-21bis/Nasal/crash-and-stress.nas</file>  </crashandstress>    <!-- plane go boom when crash -->
        <rcs>               <file>Aircraft/MiG-21bis/Nasal/rcs.nas</file>               </rcs>                <!-- rcs calc, used in radar -->
        <vector>            <file>Aircraft/MiG-21bis/Nasal/vector.nas</file>            </vector>            <!-- vector math library -->
        <formation>         <file>Aircraft/Generic/formation.nas</file>                 </formation>        <!-- dont support -->
        <dialog>            <file>Aircraft/MiG-21bis/Nasal/dialogs.nas</file>           </dialog>            <!-- dialogs -->
        <radar_altimeter>   <file>Aircraft/MiG-21bis/Nasal/radar-altimeter.nas</file>   </radar_altimeter>    <!-- r-alt pitch offsets -->
        <autopilot>         <file>Aircraft/MiG-21bis/Nasal/autopilot.nas</file>         </autopilot>        <!-- ap button listeners -->
        <radio>             <file>Aircraft/MiG-21bis/Nasal/radios.nas</file>            </radio>            <!-- radio freq remapping -->
        <gyro_compass>      <file>Aircraft/MiG-21bis/Nasal/gyro-compass.nas</file>      </gyro_compass>        <!-- listener for gyrocompass display -->
        <rwr>               <file>Aircraft/MiG-21bis/Nasal/rwr.nas</file>               </rwr>                <!-- rwr -->
        <iff>               <file>Aircraft/MiG-21bis/Nasal/iff.nas</file>               </iff>                <!-- iff -->
        <gci>               <file>Aircraft/MiG-21bis/Nasal/gci-listener.nas</file>      </gci>                <!-- gci -->
        <radio_canvas>      <file>Aircraft/MiG-21bis/Nasal/radio_canvas.nas</file>      </radio_canvas>        <!-- canvas for the paper note on the gunsight -->
        <headshake>         <file>Aircraft/MiG-21bis/Nasal/headmove.nas</file>          </headshake>        <!-- shaking the head around -->
        <canvas_window>     <file>Aircraft/MiG-21bis/Nasal/canvas_windows.nas</file>    </canvas_window>
        <mig28>             <file>Aircraft/MiG-21bis/Nasal/mig28.nas</file>             </mig28>
        <monitor>           <file>Aircraft/MiG-21bis/Nasal/dialog-perf.nas</file>
                            <file>Aircraft/MiG-21bis/Nasal/performance.nas</file>       </monitor>
        <tacview>           <file>Aircraft/MiG-21bis/Nasal/tacview.nas</file>           </tacview>

    </nasal>


    <logging>
        <log>
            <filename>C:/Users/soweli/AppData/Roaming/flightgear.org/Export/mig_flightlog.csv</filename>
            <enabled>false</enabled>
            <interval-ms>500</interval-ms>
            <delimiter>,</delimiter>
            <entry>
                <enabled>true</enabled>
                <title>Latitude</title>
                <property>/position/latitude-deg</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>Longitude</title>
                <property>/position/longitude-deg</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>alt ft</title>
                <property>/position/altitude-ft</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>date</title>
                <property>logging/date-log</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>time</title>
                <property>logging/time-log</property>
            </entry>
        </log>
        <log>
            <filename>C:/Users/soweli/AppData/Roaming/flightgear.org/Export/mp_0_flightlog.csv</filename>
            <enabled>false</enabled>
            <interval-ms>100</interval-ms>
            <delimiter>,</delimiter>
            <entry>
                <enabled>true</enabled>
                <title>Latitude</title>
                <property>/ai/models/multiplayer/position/latitude-deg</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>Longitude</title>
                <property>/ai/models/multiplayer/position/longitude-deg</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>alt ft</title>
                <property>/ai/models/multiplayer/position/altitude-ft</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>date</title>
                <property>sim/time/date-log</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>time</title>
                <property>sim/time/time-log</property>
            </entry>
        </log>
        <log>
            <filename>C:/Users/soweli/AppData/Roaming/flightgear.org/Export/missile_flightlog.csv</filename>
            <enabled>false</enabled>
            <interval-ms>50</interval-ms>
            <delimiter>,</delimiter>
            <entry>
                <enabled>true</enabled>
                <title>Latitude</title>
                <property>/logging/missile/latitude-deg</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>longitude</title>
                <property>/logging/missile/longitude-deg</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>Altitude</title>
                <property>/logging/missile/altitude-ft</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>Speed</title>
                <property>/logging/missile/speed-m</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>Thrust</title>
                <property>/logging/missile/thrust-lbf</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>Guidance</title>
                <property>/logging/missile/guidance</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>date</title>
                <property>sim/time/date-log</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>time</title>
                <property>sim/time/time-log</property>
            </entry>
        </log>
        <log>
            <filename>C:/Users/ice_o/AppData/Roaming/flightgear.org/Export/missile_flightlog.csv</filename>
            <enabled>false</enabled>
            <interval-ms>1</interval-ms>
            <delimiter>,</delimiter>
            <entry>
                <enabled>true</enabled>
                <title>pitch</title>
                <property>/fdm/jsbsim/instrumentation/fd/pitch</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>tgt-pitch</title>
                <property>/fdm/jsbsim/instrumentation/fd/letdown-mode-tgt-pitch</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>ap-pitch</title>
                <property>/fdm/jsbsim/instrumentation/input/ap-pitch</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>prefilter</title>
                <property>/fdm/jsbsim/instrumentation/fd/letdown-mode-tgt-pitch-prefilter</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>combinedvs</title>
                <property>/fdm/jsbsim/instrumentation/fd/letdown-mode-combined-vs-fps</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>tas</title>
                <property>/velocities/tas-kt</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>alpha</title>
                <property>/orientation/alpha-deg</property>
            </entry>
            <entry>
                <enabled>true</enabled>
                <title>roll</title>
                <property>/orientation/roll-deg</property>
            </entry>
        </log>
        <time-log type="string">0:0:0</time-log>
        <date-log type="string">0/0/0</date-log>
        <missile>
            <!-- for google earth -->
            <altitude-ft type="double">0.0</altitude-ft>
            <longitude-deg type="double">0.0</longitude-deg>
            <latitude-deg type="double">0.0</latitude-deg>
            <t-altitude-ft type="double">0.0</t-altitude-ft>
            <t-longitude-deg type="double">0.0</t-longitude-deg>
            <t-latitude-deg type="double">0.0</t-latitude-deg>

            <!-- for plotting performance -->
            <dist-m type="double">0.0</dist-m>
            <alt-m type="double">0.0</alt-m>
            <speed-m type="double">0.0</speed-m>
            <drag-lbf type="double">0.0</drag-lbf>
            <thrust-lbf type="double">0.0</thrust-lbf>

            <!-- test -->
            <LOS-rate type="double">0.0</LOS-rate>
            <dt type="double">0.0</dt>
        </missile>
    </logging>



</PropertyList>